---
- name: NGINX | Installing NGINX
  apt:
    name: nginx
    state: latest
    update_cache: no 
  tags: NGINX

- name: NGINX | Prepare special "{{ item }}"
  template: src="{{ roles_base }}templates/{{ image }}/{{ item }}" dest="{{ nginx_html_path }}/{{ item }}" mode=644
  #debug: msg="{{ item }}"
  register: output
  with_items:
    - index.html
    - offline.html
  failed_when: output.state != "file"
  tags: NGINX

- name: NGINX | Starting NGINX
  service:
    name: nginx
    state: started
  tags: NGINX

- name: NGINX | Wait for NGINX to start
  wait_for: port=80
  tags: NGINX
     
#- debug: vars=output msg="{{ inventory_hostname }}"
#- debug: vars=output msg="{{ ansible_eth0["ipv4"]["address"] }}"
- name: NGINX | Check
  #local_action: uri url=http://{{ inventory_hostname }}
  local_action: uri url=http://{{ ansible_eth0["ipv4"]["address"] }}
  register: output
  failed_when: output.status != 200
  tags: NGINX
#- debug: vars=output msg="{{ output.status }}"

- name: NGINX | Check offline.html
  local_action: uri url=http://{{ ansible_eth0["ipv4"]["address"] }}/offline.html
  register: output
  failed_when: output.status != 200
  tags: NGINX
#- debug: vars=output msg="{{ output.status }}"

- name: NGINX | Stopping NGINX
  service:
    name: nginx
    state: stopped
  tags: NGINX
