---
- name: Create/Delete/Disable plugins for an instance
  hosts: dockerhost
  sudo: False

  vars_files:
    - ../../roles/dockerhost/vars/base.yml

  pre_tasks:
    - include: '{{ tasks_base }}check_connection.yml'

    # - debug: vars=ansible_env msg="{{ ansible_env }}"

    # - debug: vars=local_base msg="{{ local_base | realpath }}"

    # - debug: vars=config_base msg="{{ config_base }}"

    # - debug: vars=files_base msg="{{ files_base }}"

    # - debug: vars=image msg="{{ image }}"

    # - debug: vars=env_name msg="{{ env_name }}"


    - name: Check directory "{{ config_base }}" and create if not found
      file: dest={{ config_base }} state=directory
      register: checkout
      failed_when: checkout.state != "directory"
    # - debug: vars=checkout msg="{{checkout}}"

    - name: Create "{{ jenkins_base }}/{{ env_name }}" folder
      file: dest="{{ jenkins_base }}/{{ env_name }}" state=directory mode=0775
      register: checkout
      failed_when: checkout.state != "directory"
    # - debug: vars=checkout msg="{{checkout}}"

    - name: Create "{{ jenkins_base }}/{{ env_name }}/plugins" folder
      file: dest="{{ jenkins_base }}/{{ env_name }}/plugins" state=directory mode=0775
      register: checkout
      failed_when: checkout.state != "directory"
    # - debug: vars=checkout msg="{{checkout}}"

    - file: path="{{ config_base }}{{ image }}/plugins.sh" state=file mode="u=rwx,g=rx,o=rx"
      register: checkout
      failed_when: checkout.state != "file"
    # - debug: vars=checkout msg="{{checkout}}"

  tasks:
    - name: Handle plugins
      command: bash -x "{{ files_base }}{{ image }}/plugins.sh" "{{ files_base }}{{ image }}/{{ item }}" "{{ jenkins_base }}/{{ env_name }}/plugins"
      with_items: "{{ jenkins_extra_plugins }}"
      register: output
    # - debug: vars=output msg="{{ output.msg }}"

    #- debug: vars=output msg="{{ item.stdout_lines }}"
    #  with_items: "{{ output.results }}"

    - name: Process template for plugins
      template: src="{{ item }}" dest="{{ jenkins_base }}/{{ env_name }}/{{ item | basename | regex_replace('^(.*)\.j2$', '\\1') }}"
      #debug: vars="{{ item }}" msg="{{jenkins_base}}/{{ env_name }}/{{ item | basename | regex_replace('^(.*)\.j2$', '\\1') }}"
      with_fileglob:
        - "{{ files_base }}{{ image }}/jenkins/plugins/*.j2"
