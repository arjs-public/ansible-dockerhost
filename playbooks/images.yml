---
- name: List images on dockerhost
  hosts: dockerhost
  gather_facts: no
  sudo: False

  vars:
    - do_debug: False
    - do_check_connection: False
    - base_folder: ..

  vars_files:
    - "{{ base_folder }}/roles/common/vars/defaults.yml"
    - "{{ base_folder }}/roles/{{ image }}/vars/defaults.yml"

  pre_tasks:
    - include: '{{ common_tasks_base }}/debug.yml'
      when: do_debug|bool

    - include: '{{ common_tasks_base }}check_connection.yml'
      when: do_check_connection|bool

  tasks:
    - name: IMAGES | Check if "docker.io" is present
      shell: dpkg-query --list docker.io    
      register: checkout
      failed_when: checkout.rc != 0
    - debug: msg="[Debug] IMAGES | {{ checkout }}"
      when: do_debug|bool and checkout is defined
    
    - name: IMAGES | Execute docker images with an grep for name "{{ image }}"
      shell: docker images | grep "{{ image }}"
      when: "'{{ image }}' != ''"
      register: output
    - debug: msg="[Debug] IMAGES | {{ checkout }}"
      when: do_debug|bool and checkout is defined
    
    - name: IMAGES | Execute docker images
      shell: docker images
      when: "'{{ image }}' == ''"
      register: output
    - debug: msg="[Debug] IMAGES | {{ checkout }}"
      when: do_debug|bool and checkout is defined
    
    - name: IMAGES | Execute docker status with an name "{{ image }}" 
      shell: docker ps -a -f name="{{ image }}" | tail -n +2
      when: "'{{ image }}' != ''"
      register: output
    - debug: msg="[Debug] IMAGES | {{ checkout }}"
      when: do_debug|bool and checkout is defined
       
    - name: IMAGES | Execute docker status with an name "{{ image }}_{{ env_name }}"
      shell: docker ps -a -f name="{{ image }}_{{ env_name }}" | tail -n +2
      when: "'{{ image }}' != '' and '{{ env_name }}' != ''"
      register: output
    - debug: msg="[Debug] IMAGES | {{ checkout }}"
      when: do_debug|bool and checkout is defined
       
    - name: IMAGES | Execute docker status
      shell: docker ps -a
      when: "'{{ image }}' == '' and '{{ env_name }}' == ''"
      register: output
    - debug: msg="[Debug] IMAGES | {{ checkout }}"
      when: do_debug|bool and checkout is defined
