---
- name: Create/Delete/Disable plugins for an instance
  hosts: dockerhost
  sudo: False
  gather_facts: no

  vars:
    - base_folder: ../..
    - do_debug: False

  vars_files:
    - "{{ base_folder }}/roles/vars/base.yml"
    - "{{ base_folder }}/vars/group/{{ image }}.vault"

  pre_tasks:
    - include: '{{ tasks_base }}debug_info.yml'
      when: do_debug == True
    - debug: msg="{{ lookup('pipe', 'ls -la ../../configs/.secrets/vpf.txt') }} is the raw result of running this command"
      when: do_debug == True

    - include: '{{ tasks_base }}check_connection.yml'

    - include: '{{ tasks_base }}check_folders.yml'
      when: do_debug == True

  tasks:
    - name: Copy "{{ image }}" docker file to localhost
      synchronize:
        src: "{{ files_base }}{{ image }}/"
        dest: "{{ image_path }}{{ image }}/"
        delete: yes
        rsync_opts:
            - "--no-motd"
            - "--exclude='**/*.DS_Store'"


    - name: Create "{{ volume_home }}/plugins" folder
      file: dest="{{ volume_home }}/plugins" state=directory mode=0775
      register: checkout
      failed_when: checkout.state != "directory"
    - debug: msg="{{ checkout }}"
      when: do_debug == True

    - name: Check "{{ image_path }}{{ image }}/plugins.sh"
      file: path="{{ image_path }}{{ image }}/plugins.sh" state=file mode="0755"
      register: checkout
      failed_when: checkout.state != "file"
    - debug: msg="{{ checkout }}"
      when: do_debug == True

    - name: Handle plugins
      shell: "{{ image_path }}{{ image }}/plugins.sh {{ image_path }}{{ image }}/{{ item }} {{ volume_home }}/plugins"
      with_items: "{{ jenkins_extra_plugins }}"
      register: output
    - debug: msg="{{ output.msg }}"
      when: do_debug == True

    - name: Check "{{ image_path }}{{ image }}"
      file: path="{{ image_path }}{{ image }}" state=directory
      register: checkout
      failed_when: checkout.state != "directory"
    - debug: msg="{{ checkout }}"
      when: do_debug == True

    - debug: msg="{{ item }}"
      when: do_debug == True
      with_fileglob:
        - "{{ templates_base }}{{ image }}/plugins/*.j2"
    - name: Process template for plugins
      template: src="{{ item }}" dest="{{ volume_home }}/{{ item | basename | regex_replace('^(.*)\.j2$', '\\1') }}"
      #debug: msg="{{ volume_home }}/{{ item | basename | regex_replace('^(.*)\.j2$', '\\1') }}"
      with_fileglob:
        - "{{ templates_base }}{{ image }}/plugins/*.j2"
