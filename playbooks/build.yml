---
- name: Build {{ image }} image
  hosts: dockerhost
  sudo: False

  vars_files:
    - ../roles/vars/base.yml

  pre_tasks:
    # - include: '{{ tasks_base }}debug_info.yml'

    - include: '{{ tasks_base }}check_connection.yml'

  tasks:
    - name: Check directory "{{ image_path }}" and create if not found
      file: dest="{{ image_path }}" state=directory
      register: checkout
      failed_when: checkout.state != 'directory'


    - name: Copy "{{ image }}" docker file to localhost
      synchronize:
        src: "{{ files_base }}{{ image }}/"
        dest: "{{ image_path }}{{ image }}/"
        copy_links: yes
        delete: yes
        rsync_opts:
            - "--no-motd"
            - "--exclude='**/*.DS_Store'"
      
    - name: Check "{{ image }}" docker image folder
      stat: path="{{ image_path }}{{ image }}/"
      register: checkout
      failed_when: checkout.stat.exists == False


    - name: Check "{{ image_path }}{{ image }}/keys" folder
      file: dest="{{ image_path }}{{ image }}/keys" state=directory
      register: checkout
      failed_when: checkout.state != "directory"
    - stat: path="{{ image }}/keys"
      register: file_check
      ignore_errors: True
    - name: copy "{{ image }}" private key file to destination
      copy:
        src: "{{ files_base }}/{{ image }}/keys/id_rsa"
        dest: "{{ image_path }}{{ image }}/keys/id_rsa"
        mode: 0600
      when: file_check.stat.exists == True
    - name: copy global private key file to destination
      copy:
        src: "{{ global_files_base }}/keys/id_rsa"
        dest: "{{ image_path }}{{ image }}/keys/id_rsa"
        mode: 0600
      when: file_check.stat.exists != True
    - name: copy "{{ image }}" public key file to destination
      copy:
        src: "{{ files_base }}/{{ image }}/keys/id_rsa.pub"
        dest: "{{ image_path }}{{ image }}/keys/id_rsa.pub"
        mode: 0600
      when: file_check.stat.exists == True
    - name: copy global public key file to destination
      copy:
        src: "{{ global_files_base }}/keys/id_rsa.pub"
        dest: "{{ image_path }}{{ image }}/keys/id_rsa.pub"
        mode: 0600
      when: file_check.stat.exists != True


    - name: Check "{{ image_path }}{{ image }}/etc" folder
      file: dest="{{ image_path }}{{ image }}/etc" state=directory
      register: checkout
      failed_when: checkout.state != "directory"
    - stat: path="{{ image }}/etc"
      register: file_check
      ignore_errors: True
    - name: copy "{{ image }}" timezone file to destination
      copy:
        src: "{{ files_base }}/{{ image }}/etc/timezone"
        dest: "{{ image_path }}{{ image }}/etc/timezone"
        mode: 0644
      when: file_check.stat.exists == True
    - name: copy global timezone file to destination
      copy:
        src: "{{ global_files_base }}/etc/timezone"
        dest: "{{ image_path }}{{ image }}/etc/timezone"
        mode: 0644
      when: file_check.stat.exists != True


    - stat: path="{{ files_base }}/{{ image }}/get-pip.py"
      register: file
      ignore_errors: True
    - name: copy get-pip.py file to destination
      copy:
        src: "{{ files_base }}/{{ image }}/get-pip.py"
        dest: "{{ image_path }}{{ image }}/get-pip.py"
        mode: 0644
      when: file.stat.exists


    - name: Check if "docker.io" is present
      shell: dpkg-query --list docker.io    
    #   register: checkout
    # - debug: msg="{{ checkout }}"
    - name: Create "{{ image }}" docker image
      # docker_image:
      #  name: base
      #  path: /home/homeboy/work/playbooks/local_test/files/docker/base
      #  state: build
      command: docker build -t {{ image }} "{{ image_path }}{{ image }}"
      register: buildout
      failed_when: buildout.rc != 0
    
    - name: Execute docker images
      shell: docker images | grep "{{ image }}"
    #   register: output
    # - debug: msg="{{ output }}"
