---
- name: SITE | Prepares and deploys a working websites
  hosts: dockerhost
  gather_facts: no
  sudo: no

  vars:
    - do_debug: False
    - do_check_folders: False
    - do_check_connection: False
    - base_folder: ../..

  vars_files:
    - "{{ base_folder }}/roles/common/vars/defaults.yml"
    - "{{ base_folder }}/roles/site/vars/defaults.yml"

  pre_tasks:
    - include: '{{ common_tasks_base }}/debug.yml'
      when: do_debug|bool

    - include: '{{ common_tasks_base }}check_connection.yml'
      when: do_check_connection|bool

    - include: '{{ common_tasks_base }}check_folders.yml'
      when: do_check_folders|bool

  tasks:
    - name: SITE | Check variables
      fail: msg="[error] {{ item }} is not defined"
      when: "{{ item }} is not defined"
      with_items:
      - image
      - env_name
      - site_name
      
    - debug: msg="[Debug] {{ volume_home }}"
      when: do_debug|bool and volume_home is defined
    - name: SITE | Create "{{ volume_home }}" folder if not exists
      file: dest="{{ volume_home }}" state=directory mode=0775
      register: checkout
      #failed_when: checkout.state != "directory"
    - debug: msg="[Debug] {{ checkout }}"
      when: do_debug|bool and checkout is defined

    - name: SITE | Create "{{ env_name }}.{{ site_name }}" entry in inventory
      local_action: lineinfile
          dest="{{ global_inventory }}"
          line="{{ env_name }}.{{ site_name }} ansible_ssh_host=ip"
          regexp="^{{ env_name }}.{{ site_name }} ansible_ssh_host="
          insertafter="EOF"
          state=present

    - debug: msg="[Debug] {{ templates_base }}{{ item }} {{ volume_home }}/{{ item }}"
      with_items:
        - index.html
        - offline.html
      when: do_debug|bool
    - name: SITE | Prepare special "{{ item }}"
      template: src="{{ templates_base }}{{ item }}" dest="{{ volume_home }}/{{ item }}" mode=644
      register: checkout
      with_items:
        - index.html
        - offline.html
      failed_when: checkout.state != "file"
      tags: nginx
    - debug: msg="[Debug] {{ checkout }}"
      when: do_debug|bool and checkout is defined
